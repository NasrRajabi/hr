{% extends "master.twig" %}

{% block style %}
	<style>
		/* Add your CSS styles here */
		table {
			width: 100%;
			border-collapse: collapse;
		}

		table,
		th,
		td {
			border: 1px solid #ccc;
		}

		th,
		td {
			padding: 8px;
			text-align: center;
		}

		.day-header {
			background-color: #f2f2f2;
		}

		.time-slot {
			font-weight: bold;
		}

		.timeline {
			list-style: none;
			padding: 0;
		}

		.timeline li {
			position: relative;
			margin-bottom: 30px;
		}

		.timeline-badge {
			width: 20px;
			height: 20px;
			border-radius: 50%;
			position: absolute;
			top: 0;
			left: 0;
		}

		.th-table {


			border-top-left-radius: 10px; /* Rounded top-left corner */
			border-top-right-radius: 10px; /* Rounded top-right corner */
			overflow: hidden;

		}
		.th-table th {
			background-color: #f2f2f2; /* Background color */

			font-weight: bold; /* Bold text */
			text-align: center; /* Center-align text */

			padding-top: 20px;

		}


		.htimeline {
			list-style: none;
			padding: 0;
			margin: 20px 0 0;
			width: 100%
		}

		.htimeline .step {
			float: right;
			border-top-style: solid;
			border-top-width: 5px;
			position: relative;
			margin-bottom: 25px;
			text-align: right;
			padding: 3px 0 5px 10px;
			background-color: #ddd;
			color: #333;
			height: 105px;
			vertical-align: middle;
			border-right: solid 1px #bbb;
			transition: all 0.5s ease;
		}

		.htimeline .step:nth-child(odd) {
			background-color: #eee;
		}

		.htimeline .step:first-child {
			border-right: solid 1px #bbb;
		}

		.htimeline .step:hover {
			background-color: #ccc;
			border-bottom-width: 6px;
		}

		.htimeline .step > div {
			margin: 0 5px;
			font-size: 16px;
			vertical-align: top;
			padding: 0;
		}

		.htimeline .step.green {
			border-top-color: var(--bs-success);
		}
		.htimeline .step.yellow {
			border-top-color: var(--bs-warning);
		}

		.htimeline .step.orange {
			border-top-color: var(--bs-warning);
		}

		.htimeline .step.red {
			border-top-color: var(--bs-danger);
		}

		.htimeline .step.blue {
			border-top-color: var(--bs-info);
		}

		.htimeline .step::before {
			width: 15px;
			height: 15px;
			border-radius: 50px;
			content: ' ';
			background-color: white;
			position: absolute;
			top: -10px;
			right: 0;
			border-style: solid;
			border-width: 3px;
			transition: all 0.5s ease;
		}

		.htimeline .step:hover::before {
			width: 18px;
			height: 18px;
			bottom: -12px;
		}

		.htimeline .step.green::before {
			border-color: var(--bs-success);
		}

		.htimeline .step.orange::before {
			border-color: var(--bs-warning);
		}

		.htimeline .step.red::before {
			border-color: var(--bs-danger);
		}

		.htimeline .step.blue::before {
			border-color: var(--bs-info);
		}


		.htimeline .step::after {
			content: attr(data-date);
			position: absolute;
			top: -31px;
			right: 14px;
			font-size: 14px;
			font-weight: 600;
			color: #000;
			background-color: var(--bs-light);
			padding: 2px;
		}

		/*TASKS*/
		.htimeline .step .tasks {
			margin-top: 10px;
		}

		.htimeline .step .tasks .resource {
			position: relative;
			height: 40px;
		}

		.htimeline .step .tasks .resource::before {
			position: absolute;
			bottom: 2px;
			right: -5px;
			content: attr(data-name);
			font-size: 10px;
			font-style: italic;
			color: #888
		}

		.htimeline .step .tasks .task {
			overflow: hidden;
			font-size: 14px;
			padding: 3px;
			border: solid 1px white;
			border-radius: 4px;
			min-height: 20px;
		}

		.htimeline .step.green .tasks .task {
			background-color: var(--bs-success);
			color: white;
		}
		.htimeline .step.yellow .tasks .task {
			background-color: var(--bs-warning);
			color: white;
		}

		.htimeline .step.orange .tasks .task {
			background-color: var(--bs-warning);
			color: white;
		}

		.htimeline .step.red .tasks .task {
			background-color: var(--bs-danger);
			color: white;
		}

		.htimeline .step.blue .tasks .task {
			background-color: var(--bs-info);
			color: white;
		}

		/***/
		.htimeline .step-end {
			float: right;
			border-top-style: solid;
			border-top-width: 5px;
			position: relative;
			margin-bottom: 25px;
			text-align: right;
			padding: 3px 0 5px 10px;
			background-color: #ddd;
			color: #333;
			height: 105px;
			vertical-align: middle;
			border-right: solid 1px #bbb;
			transition: all 0.5s ease;
		}

		.htimeline .step-end:nth-child(odd) {
			background-color: #eee;
		}

		.htimeline .step-end:first-child {
			border-right: solid 1px #bbb;
		}

		.htimeline .step-end:hover {
			background-color: #ccc;
			border-bottom-width: 6px;
		}

		.htimeline .step-end > div {
			margin: 0 5px;
			font-size: 16px;
			vertical-align: top;
			padding: 0;
		}

		.htimeline .step-end.green {
			border-top-color: var(--bs-success);
		}
		.htimeline .step-end.yellow {
			border-top-color: var(--bs-warning);
		}

		.htimeline .step-end.orange {
			border-top-color: var(--bs-warning);
		}

		.htimeline .step-end.red {
			border-top-color: var(--bs-danger);
		}

		.htimeline .step-end.blue {
			border-top-color: var(--bs-info);
		}

		.htimeline .step-end::before {
			width: 15px;
			height: 15px;
			border-radius: 50px;
			content: ' ';
			background-color: white;
			position: absolute;
			top: -10px;
			left: 0;
			border-style: solid;
			border-width: 3px;
			transition: all 0.5s ease;
		}

		.htimeline .step-end:hover::before {
			width: 18px;
			height: 18px;
			bottom: -12px;
		}

		.htimeline .step-end.green::before {
			border-color: var(--bs-success);
		}

		.htimeline .step-end.orange::before {
			border-color: var(--bs-warning);
		}

		.htimeline .step-end.red::before {
			border-color: var(--bs-danger);
		}

		.htimeline .step-end.blue::before {
			border-color: var(--bs-info);
		}


		.htimeline .step-end::after {
			content: attr(data-date);
			position: absolute;
			top: -31px;
			right: 14px;
			font-size: 14px;
			font-weight: 600;
			color: #000;
			background-color: var(--bs-light);
			padding: 2px;
		}

		/*TASKS*/
		.htimeline .step-end .tasks {
			margin-top: 10px;
		}

		.htimeline .step-end .tasks .resource {
			position: relative;
			height: 40px;
		}

		.htimeline .step-end .tasks .resource::before {
			position: absolute;
			bottom: 2px;
			right: -5px;
			content: attr(data-name);
			font-size: 10px;
			font-style: italic;
			color: #888
		}

		.htimeline .step-end .tasks .task {
			overflow: hidden;
			font-size: 14px;
			padding: 3px;
			border: solid 1px white;
			border-radius: 4px;
			min-height: 20px;
		}

		.htimeline .step-end.green .tasks .task {
			background-color: var(--bs-success);
			color: white;
		}
		.htimeline .step-end.yellow .tasks .task {
			background-color: var(--bs-warning);
			color: white;
		}

		.htimeline .step-end.orange .tasks .task {
			background-color: var(--bs-warning);
			color: white;
		}

		.htimeline .step-end.red .tasks .task {
			background-color: var(--bs-danger);
			color: white;
		}

		.htimeline .step-end.blue .tasks .task {
			background-color: var(--bs-info);
			color: white;
		}
	</style>
{% endblock %}

{% block main %}
	<main class="col ms-1">
		<div class="row">
			<div class="card">
				<div class="card-header row justify-content-between p-3 border-bottom">
					<div class="col-md-6 d-flex">
						<h4 class="text-end me-3 mt-3">
							سجل الدوام لشهر
							{{ lookups.arabic_months[month] }}
							للموظف/ة:
						</h4>
						<h4 class="text-end me-3 mt-3 text-primary">
							{{employee.f_name}}
							{{employee.s_name}}
							{{employee.t_name}}
							{{employee.l_name}}
						</h4>
					</div>
				</div>

				<div class="card-body">

					<div class="d-flex flex-row-reverse py-3">

						<button class="btn btn-primary  ">
							<i class="bi bi-calendar"></i>
							اتفاقية الموظف
						</button>
					</div>

					<div class="w-100">
						{% for key, item in data %}
							{% if key != null %}
								{% set dateParts = key|split('-') %}

								<div class="card mb-3">
									<div class="card-body p-2 pt-4">
										<div class="row">
											{% if item.att_status == 5 %}
												<div class="card col-lg-2 col-md-3 col-sm-3 col-xs-12">
													عطلة رسمية
												</div>

											{% elseif item.start_date != null and item.end_time != null %}
												<div class="card col-lg-2 col-md-3 col-sm-3 col-xs-12">
													{{item.vacation_name}}
												</div>
											{% else %}

												<div class="col-lg-2 col-md-3 col-sm-3 col-xs-12">

													<div class="card bg-white mb-1">
														<div class="card-header text-center bg-primary text-white">
															{{lookups.arabic_months[month]}}
														</div>
														<div class="card-body p-0">
															<div class="text-center fs-2 font-weight-bold">{{dateParts[2]}}</div>
															<div class="text-center fs-5 font-weight-bold">{{lookups.days[item.day]}}</div>

															<div class="text-center font-weight-normal p-0 font-weight-bolder pb-1">{{item.start_time|date("H:i")}}
																-
																{{item.end_time|date("H:i")}}</div>
														</div>
													</div>


												</div>
												<div class="col-lg-10 col-md-9 col-sm-9 col-xs-12">
													<div class="row">
													
											</div>
										</div>
									</div>

								{% endif %}
							</div>
						</div>
					{% endif %}
				{% endfor %}
			</div>
		</div>
	</div>
</div></main><script src="https://cdn.jsdelivr.net/npm/bootstrap@5.5.0/dist/js/bootstrap.bundle.min.js"></script><script>
const header = document.getElementById('calendarHeader');
const monthYear = document.getElementById('monthYear');

const months = [
'January',
'February',
'March',
'April',
'May',
'June',
'July',
'August',
'September',
'October',
'November',
'December'
];

const currentDate = new Date();
const currentMonth = currentDate.getMonth();
const currentYear = currentDate.getFullYear();

header.style.backgroundColor = getRandomColor();
monthYear.textContent = `${
months[currentMonth]
} ${currentYear}`;

function getRandomColor() {
const colors = ['#257fbc', '#19a2a3', '#2182c1', '#14a5bc'];
return colors[Math.floor(Math.random() * colors.length)];
}</script>{% endblock %}
